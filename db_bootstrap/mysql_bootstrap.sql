-- Author: Dinesh Thangaraj <ttsdinesh@gmail.com>

-- MySQL version 5.7.20

-- Run time ~ 6 minutes

use fortumo_test_task;
DROP TABLE IF EXISTS merchants; 

CREATE TABLE merchants 
  ( 
     id    INT NOT NULL auto_increment PRIMARY KEY, 
     uuid  VARCHAR(255), 
     login VARCHAR(255) 
  ); 

DROP TABLE IF EXISTS operators; 

CREATE TABLE operators 
  ( 
     id   INT NOT NULL auto_increment PRIMARY KEY, 
     code VARCHAR(255), 
     name VARCHAR(255) 
  ); 

DROP TABLE IF EXISTS countries; 

CREATE TABLE countries 
  ( 
     id   INT NOT NULL auto_increment PRIMARY KEY, 
     code VARCHAR(255), 
     name VARCHAR(255) 
  ); 

DROP TABLE IF EXISTS payments; 

CREATE TABLE payments 
  ( 
     id            INT NOT NULL auto_increment, 
     created_at    DATETIME, 
     updated_at    DATETIME, 
     merchant_uuid VARCHAR(255), 
     operator_code VARCHAR(255), 
     country_code  VARCHAR(255), 
     msisdn        VARCHAR(255), 
     amount        DECIMAL(20, 6), 
     PRIMARY KEY (`id`, created_at), -- make id & created_at as primary key since created_at should be part of PK to create partitions based on created_at
       
     INDEX msisdn_merchant_country_operator_idx (msisdn, merchant_uuid, 
     country_code, operator_code) -- important to create this index which improves search query performance 
  ); 

-- SOURCE ~/ms-dev-test-task/src/main/java/io/fortumo/tools/partitions.sql
ALTER TABLE payments PARTITION BY RANGE (TO_DAYS(created_at))(PARTITION p0 VALUES LESS THAN (TO_DAYS ('2013-01-01')),PARTITION p1 VALUES LESS THAN (TO_DAYS ('2013-02-01')),PARTITION p2 VALUES LESS THAN (TO_DAYS ('2013-03-01')),PARTITION p3 VALUES LESS THAN (TO_DAYS ('2013-04-01')),PARTITION p4 VALUES LESS THAN (TO_DAYS ('2013-05-01')),PARTITION p5 VALUES LESS THAN (TO_DAYS ('2013-06-01')),PARTITION p6 VALUES LESS THAN (TO_DAYS ('2013-07-01')),PARTITION p7 VALUES LESS THAN (TO_DAYS ('2013-08-01')),PARTITION p8 VALUES LESS THAN (TO_DAYS ('2013-09-01')),PARTITION p9 VALUES LESS THAN (TO_DAYS ('2013-10-01')),PARTITION p10 VALUES LESS THAN (TO_DAYS ('2013-11-01')),PARTITION p11 VALUES LESS THAN (TO_DAYS ('2013-12-01')),PARTITION p12 VALUES LESS THAN (TO_DAYS ('2014-01-01')),PARTITION p13 VALUES LESS THAN (TO_DAYS ('2014-02-01')),PARTITION p14 VALUES LESS THAN (TO_DAYS ('2014-03-01')),PARTITION p15 VALUES LESS THAN (TO_DAYS ('2014-04-01')),PARTITION p16 VALUES LESS THAN (TO_DAYS ('2014-05-01')),PARTITION p17 VALUES LESS THAN (TO_DAYS ('2014-06-01')),PARTITION p18 VALUES LESS THAN (TO_DAYS ('2014-07-01')),PARTITION p19 VALUES LESS THAN (TO_DAYS ('2014-08-01')),PARTITION p20 VALUES LESS THAN (TO_DAYS ('2014-09-01')),PARTITION p21 VALUES LESS THAN (TO_DAYS ('2014-10-01')),PARTITION p22 VALUES LESS THAN (TO_DAYS ('2014-11-01')),PARTITION p23 VALUES LESS THAN (TO_DAYS ('2014-12-01')),PARTITION p24 VALUES LESS THAN (TO_DAYS ('2015-01-01')),PARTITION p25 VALUES LESS THAN (TO_DAYS ('2015-02-01')),PARTITION p26 VALUES LESS THAN (TO_DAYS ('2015-03-01')),PARTITION p27 VALUES LESS THAN (TO_DAYS ('2015-04-01')),PARTITION p28 VALUES LESS THAN (TO_DAYS ('2015-05-01')),PARTITION p29 VALUES LESS THAN (TO_DAYS ('2015-06-01')),PARTITION p30 VALUES LESS THAN (TO_DAYS ('2015-07-01')),PARTITION p31 VALUES LESS THAN (TO_DAYS ('2015-08-01')),PARTITION p32 VALUES LESS THAN (TO_DAYS ('2015-09-01')),PARTITION p33 VALUES LESS THAN (TO_DAYS ('2015-10-01')),PARTITION p34 VALUES LESS THAN (TO_DAYS ('2015-11-01')),PARTITION p35 VALUES LESS THAN (TO_DAYS ('2015-12-01')),PARTITION p36 VALUES LESS THAN (TO_DAYS ('2016-01-01')),PARTITION p37 VALUES LESS THAN (TO_DAYS ('2016-02-01')),PARTITION p38 VALUES LESS THAN (TO_DAYS ('2016-03-01')),PARTITION p39 VALUES LESS THAN (TO_DAYS ('2016-04-01')),PARTITION p40 VALUES LESS THAN (TO_DAYS ('2016-05-01')),PARTITION p41 VALUES LESS THAN (TO_DAYS ('2016-06-01')),PARTITION p42 VALUES LESS THAN (TO_DAYS ('2016-07-01')),PARTITION p43 VALUES LESS THAN (TO_DAYS ('2016-08-01')),PARTITION p44 VALUES LESS THAN (TO_DAYS ('2016-09-01')),PARTITION p45 VALUES LESS THAN (TO_DAYS ('2016-10-01')),PARTITION p46 VALUES LESS THAN (TO_DAYS ('2016-11-01')),PARTITION p47 VALUES LESS THAN (TO_DAYS ('2016-12-01')),PARTITION p48 VALUES LESS THAN (TO_DAYS ('2017-01-01')),PARTITION p49 VALUES LESS THAN (TO_DAYS ('2017-02-01')),PARTITION p50 VALUES LESS THAN (TO_DAYS ('2017-03-01')),PARTITION p51 VALUES LESS THAN (TO_DAYS ('2017-04-01')),PARTITION p52 VALUES LESS THAN (TO_DAYS ('2017-05-01')),PARTITION p53 VALUES LESS THAN (TO_DAYS ('2017-06-01')),PARTITION p54 VALUES LESS THAN (TO_DAYS ('2017-07-01')),PARTITION p55 VALUES LESS THAN (TO_DAYS ('2017-08-01')),PARTITION p56 VALUES LESS THAN (TO_DAYS ('2017-09-01')),PARTITION p57 VALUES LESS THAN (TO_DAYS ('2017-10-01')),PARTITION p58 VALUES LESS THAN (TO_DAYS ('2017-11-01')),PARTITION p59 VALUES LESS THAN (TO_DAYS ('2017-12-01')),PARTITION p60 VALUES LESS THAN (TO_DAYS ('2018-01-01')),PARTITION p61 VALUES LESS THAN (TO_DAYS ('2018-02-01')),PARTITION p62 VALUES LESS THAN (TO_DAYS ('2018-03-01')),PARTITION future VALUES LESS THAN MAXVALUE);


INSERT INTO merchants 
            (uuid, 
             login) 
SELECT Md5(Rand(sequence * 37)), 
       Concat('merchant_', sequence) 
FROM   numbers 
LIMIT  1000; 

INSERT INTO operators 
            (code, 
             name) 
SELECT Concat('operator-', sequence), 
       Concat('Grand operator', sequence) 
FROM   numbers 
LIMIT  100; 

INSERT INTO countries 
            (name, 
             code) 
VALUES      ('Afghanistan', 
             'AF'), 
            ('Aland Islands', 
             'AX'), 
            ('Albania', 
             'AL'), 
            ('Algeria', 
             'DZ'), 
            ('American Samoa', 
             'AS'), 
            ('Andorra', 
             'AD'), 
            ('Angola', 
             'AO'), 
            ('Anguilla', 
             'AI'), 
            ('Antarctica', 
             'AQ'), 
            ('Antigua and Barbuda', 
             'AG'), 
            ('Argentina', 
             'AR'), 
            ('Armenia', 
             'AM'), 
            ('Aruba', 
             'AW'), 
            ('Australia', 
             'AU'), 
            ('Austria', 
             'AT'), 
            ('Azerbaijan', 
             'AZ'), 
            ('Bahamas', 
             'BS'), 
            ('Bahrain', 
             'BH'), 
            ('Bangladesh', 
             'BD'), 
            ('Barbados', 
             'BB'), 
            ('Belarus', 
             'BY'), 
            ('Belgium', 
             'BE'), 
            ('Belize', 
             'BZ'), 
            ('Benin', 
             'BJ'), 
            ('Bermuda', 
             'BM'), 
            ('Bhutan', 
             'BT'), 
            ('Bolivia', 
             'BO'), 
            ('Bosnia and Herzegovina', 
             'BA'), 
            ('Botswana', 
             'BW'), 
            ('Bouvet Island', 
             'BV'), 
            ('Brazil', 
             'BR'), 
            ('British Virgin Islands', 
             'VG'), 
            ('British Indian Ocean Territory', 
             'IO'), 
            ('Brunei Darussalam', 
             'BN'), 
            ('Bulgaria', 
             'BG'), 
            ('Burkina Faso', 
             'BF'), 
            ('Burundi', 
             'BI'), 
            ('Cambodia', 
             'KH'), 
            ('Cameroon', 
             'CM'), 
            ('Canada', 
             'CA'), 
            ('Cape Verde', 
             'CV'), 
            ('Cayman Islands', 
             'KY'), 
            ('Central African Republic', 
             'CF'), 
            ('Chad', 
             'TD'), 
            ('Chile', 
             'CL'), 
            ('China', 
             'CN'), 
            ('Hong Kong, SAR China', 
             'HK'), 
            ('Macao, SAR China', 
             'MO'), 
            ('Christmas Island', 
             'CX'), 
            ('Cocos (Keeling), Islands', 
             'CC'), 
            ('Colombia', 
             'CO'), 
            ('Comoros', 
             'KM'), 
            ('Congo (Brazzaville),', 
             'CG'), 
            ('Congo, (Kinshasa),', 
             'CD'), 
            ('Cook Islands', 
             'CK'), 
            ('Costa Rica', 
             'CR'), 
            ('CÃ´te d''Ivoire', 
             'CI'), 
            ('Croatia', 
             'HR'), 
            ('Cuba', 
             'CU'), 
            ('Cyprus', 
             'CY'), 
            ('Czech Republic', 
             'CZ'), 
            ('Denmark', 
             'DK'), 
            ('Djibouti', 
             'DJ'), 
            ('Dominica', 
             'DM'), 
            ('Dominican Republic', 
             'DO'), 
            ('Ecuador', 
             'EC'), 
            ('Egypt', 
             'EG'), 
            ('El Salvador', 
             'SV'), 
            ('Equatorial Guinea', 
             'GQ'), 
            ('Eritrea', 
             'ER'), 
            ('Estonia', 
             'EE'), 
            ('Ethiopia', 
             'ET'), 
            ('Falkland Islands (Malvinas),', 
             'FK'), 
            ('Faroe Islands', 
             'FO'), 
            ('Fiji', 
             'FJ'), 
            ('Finland', 
             'FI'), 
            ('France', 
             'FR'), 
            ('French Guiana', 
             'GF'), 
            ('French Polynesia', 
             'PF'), 
            ('French Southern Territories', 
             'TF'), 
            ('Gabon', 
             'GA'), 
            ('Gambia', 
             'GM'), 
            ('Georgia', 
             'GE'), 
            ('Germany', 
             'DE'), 
            ('Ghana', 
             'GH'), 
            ('Gibraltar', 
             'GI'), 
            ('Greece', 
             'GR'), 
            ('Greenland', 
             'GL'), 
            ('Grenada', 
             'GD'), 
            ('Guadeloupe', 
             'GP'), 
            ('Guam', 
             'GU'), 
            ('Guatemala', 
             'GT'), 
            ('Guernsey', 
             'GG'), 
            ('Guinea', 
             'GN'), 
            ('Guinea-Bissau', 
             'GW'), 
            ('Guyana', 
             'GY'), 
            ('Haiti', 
             'HT'), 
            ('Heard and Mcdonald Islands', 
             'HM'), 
            ('Holy See (Vatican City State),', 
             'VA'), 
            ('Honduras', 
             'HN'), 
            ('Hungary', 
             'HU'), 
            ('Iceland', 
             'IS'), 
            ('India', 
             'IN'), 
            ('Indonesia', 
             'ID'), 
            ('Iran, Islamic Republic of', 
             'IR'), 
            ('Iraq', 
             'IQ'), 
            ('Ireland', 
             'IE'), 
            ('Isle of Man', 
             'IM'), 
            ('Israel', 
             'IL'), 
            ('Italy', 
             'IT'), 
            ('Jamaica', 
             'JM'), 
            ('Japan', 
             'JP'), 
            ('Jersey', 
             'JE'), 
            ('Jordan', 
             'JO'), 
            ('Kazakhstan', 
             'KZ'), 
            ('Kenya', 
             'KE'), 
            ('Kiribati', 
             'KI'), 
            ('Korea (North),', 
             'KP'), 
            ('Korea (South),', 
             'KR'), 
            ('Kuwait', 
             'KW'), 
            ('Kyrgyzstan', 
             'KG'), 
            ('Lao PDR', 
             'LA'), 
            ('Latvia', 
             'LV'), 
            ('Lebanon', 
             'LB'), 
            ('Lesotho', 
             'LS'), 
            ('Liberia', 
             'LR'), 
            ('Libya', 
             'LY'), 
            ('Liechtenstein', 
             'LI'), 
            ('Lithuania', 
             'LT'), 
            ('Luxembourg', 
             'LU'), 
            ('Macedonia, Republic of', 
             'MK'), 
            ('Madagascar', 
             'MG'), 
            ('Malawi', 
             'MW'), 
            ('Malaysia', 
             'MY'), 
            ('Maldives', 
             'MV'), 
            ('Mali', 
             'ML'), 
            ('Malta', 
             'MT'), 
            ('Marshall Islands', 
             'MH'), 
            ('Martinique', 
             'MQ'), 
            ('Mauritania', 
             'MR'), 
            ('Mauritius', 
             'MU'), 
            ('Mayotte', 
             'YT'), 
            ('Mexico', 
             'MX'), 
            ('Micronesia, Federated States of', 
             'FM'), 
            ('Moldova', 
             'MD'), 
            ('Monaco', 
             'MC'), 
            ('Mongolia', 
             'MN'), 
            ('Montenegro', 
             'ME'), 
            ('Montserrat', 
             'MS'), 
            ('Morocco', 
             'MA'), 
            ('Mozambique', 
             'MZ'), 
            ('Myanmar', 
             'MM'), 
            ('Namibia', 
             'NA'), 
            ('Nauru', 
             'NR'), 
            ('Nepal', 
             'NP'), 
            ('Netherlands', 
             'NL'), 
            ('Netherlands Antilles', 
             'AN'), 
            ('New Caledonia', 
             'NC'), 
            ('New Zealand', 
             'NZ'), 
            ('Nicaragua', 
             'NI'), 
            ('Niger', 
             'NE'), 
            ('Nigeria', 
             'NG'), 
            ('Niue', 
             'NU'), 
            ('Norfolk Island', 
             'NF'), 
            ('Northern Mariana Islands', 
             'MP'), 
            ('Norway', 
             'NO'), 
            ('Oman', 
             'OM'), 
            ('Pakistan', 
             'PK'), 
            ('Palau', 
             'PW'), 
            ('Palestinian Territory', 
             'PS'), 
            ('Panama', 
             'PA'), 
            ('Papua New Guinea', 
             'PG'), 
            ('Paraguay', 
             'PY'), 
            ('Peru', 
             'PE'), 
            ('Philippines', 
             'PH'), 
            ('Pitcairn', 
             'PN'), 
            ('Poland', 
             'PL'), 
            ('Portugal', 
             'PT'), 
            ('Puerto Rico', 
             'PR'), 
            ('Qatar', 
             'QA'), 
            ('RÃ©union', 
             'RE'), 
            ('Romania', 
             'RO'), 
            ('Russian Federation', 
             'RU'), 
            ('Rwanda', 
             'RW'), 
            ('Saint-BarthÃ©lemy', 
             'BL'), 
            ('Saint Helena', 
             'SH'), 
            ('Saint Kitts and Nevis', 
             'KN'), 
            ('Saint Lucia', 
             'LC'), 
            ('Saint-Martin (French part),', 
             'MF'), 
            ('Saint Pierre and Miquelon', 
             'PM'), 
            ('Saint Vincent and Grenadines', 
             'VC'), 
            ('Samoa', 
             'WS'), 
            ('San Marino', 
             'SM'), 
            ('Sao Tome and Principe', 
             'ST'), 
            ('Saudi Arabia', 
             'SA'), 
            ('Senegal', 
             'SN'), 
            ('Serbia', 
             'RS'), 
            ('Seychelles', 
             'SC'), 
            ('Sierra Leone', 
             'SL'), 
            ('Singapore', 
             'SG'), 
            ('Slovakia', 
             'SK'), 
            ('Slovenia', 
             'SI'), 
            ('Solomon Islands', 
             'SB'), 
            ('Somalia', 
             'SO'), 
            ('South Africa', 
             'ZA'), 
            ('South Georgia and the South Sandwich Islands', 
             'GS'), 
            ('South Sudan', 
             'SS'), 
            ('Spain', 
             'ES'), 
            ('Sri Lanka', 
             'LK'), 
            ('Sudan', 
             'SD'), 
            ('Suriname', 
             'SR'), 
            ('Svalbard and Jan Mayen Islands', 
             'SJ'), 
            ('Swaziland', 
             'SZ'), 
            ('Sweden', 
             'SE'), 
            ('Switzerland', 
             'CH'), 
            ('Syrian Arab Republic (Syria),', 
             'SY'), 
            ('Taiwan, Republic of China', 
             'TW'), 
            ('Tajikistan', 
             'TJ'), 
            ('Tanzania, United Republic of', 
             'TZ'), 
            ('Thailand', 
             'TH'), 
            ('Timor-Leste', 
             'TL'), 
            ('Togo', 
             'TG'), 
            ('Tokelau', 
             'TK'), 
            ('Tonga', 
             'TO'), 
            ('Trinidad and Tobago', 
             'TT'), 
            ('Tunisia', 
             'TN'), 
            ('Turkey', 
             'TR'), 
            ('Turkmenistan', 
             'TM'), 
            ('Turks and Caicos Islands', 
             'TC'), 
            ('Tuvalu', 
             'TV'), 
            ('Uganda', 
             'UG'), 
            ('Ukraine', 
             'UA'), 
            ('United Arab Emirates', 
             'AE'), 
            ('United Kingdom', 
             'GB'), 
            ('United States of America', 
             'US'), 
            ('US Minor Outlying Islands', 
             'UM'), 
            ('Uruguay', 
             'UY'), 
            ('Uzbekistan', 
             'UZ'), 
            ('Vanuatu', 
             'VU'), 
            ('Venezuela (Bolivarian Republic),', 
             'VE'), 
            ('Viet Nam', 
             'VN'), 
            ('Virgin Islands, US', 
             'VI'), 
            ('Wallis and Futuna Islands', 
             'WF'), 
            ('Western Sahara', 
             'EH'), 
            ('Yemen', 
             'YE'), 
            ('Zambia', 
             'ZM'), 
            ('Zimbabwe', 
             'ZW'); 

INSERT INTO payments 
            (created_at, 
             updated_at, 
             merchant_uuid, 
             operator_code, 
             country_code, 
             msisdn, 
             amount) 
SELECT Now() - INTERVAL `sequence` * 20 second, -- increased decrement factor from 2 to 20 to distribute data until early 2013
       Now() - INTERVAL `sequence` * 20 second, 
       (SELECT uuid 
        FROM   merchants 
        WHERE  id = 1 + ( `sequence`%933 )), 
       (SELECT code 
        FROM   operators 
        WHERE  id = 1 + ( `sequence`%95 )), 
       (SELECT code 
        FROM   countries 
        WHERE  id = 1 + ( `sequence`%211 )),
        CONCAT('373', LPAD(`sequence` % 111111,6,'0')),
       ( ( `sequence` % 1000 ) / 100.0 ) 
FROM   numbers; 
